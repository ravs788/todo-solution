name: Reusable CI with E2E
on:
  workflow_call:
    inputs:
      e2e_tag:
        description: 'Tag to filter e2e tests (e.g. smoke, regression); if omitted, runs all.'
        required: false
        default: ''
        type: string


jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up JDK 17 for backend
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build & Test Backend (H2 in-memory)
        working-directory: ./todo-backend
        run: mvn test -Dspring.profiles.active=h2

      # Set up Node.js 20
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        working-directory: ./todo-frontend
        run: npm install

      - name: Run frontend tests
        working-directory: ./todo-frontend
        run: npm test -- --ci --watchAll=false

      - name: Upload Frontend Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-results
          path: todo-frontend/test-results/

      # Optionally upload test reports (JUnit, Allure) as workflow artifacts
      - name: Upload Backend Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: todo-backend/target/surefire-reports/

      # Set up Node.js 20  for E2E tests
      - name: Set up Node.js  for E2E tests
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Install E2E dependencies (Playwright local to tests-e2e)
      - name: Install Playwright E2E dependencies
        working-directory: ./tests-e2e
        run: npm install

      # Install wait-on for port checks
      - name: Install wait-on dependency for startup checks
        run: npm install -g wait-on

      - name: Print npm debug log
        run: cat /home/runner/.npm/_logs/*.log # Adjust path
        if: failure()

      # Start backend and frontend, then wait for both to be ready
      - name: Start backend and frontend for E2E
        run: |
          nohup mvn spring-boot:run -Dspring-boot.run.profiles=h2 -f ./todo-backend/pom.xml &
          nohup npm start --prefix ./todo-frontend &
          npx wait-on tcp:3000 tcp:8081

      # Run Playwright E2E tests and upload the HTML report
      - name: Run e2e tests (Playwright)
        working-directory: ./tests-e2e
        run: |
          npx playwright install --with-deps
          [ -n "${{ inputs.e2e_tag }}" ] && npx playwright test --grep "${{ inputs.e2e_tag }}" || npx playwright test

      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: tests-e2e/pw-html-report/
